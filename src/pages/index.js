import Head from "next/head";
import { useFormik } from "formik";
import * as Yup from "yup"
import {useRouter} from "next/router"
import { motion as m } from "framer-motion";

export default function Home() {

  const router = useRouter()

  // Formik logic
  const formik = useFormik({
    initialValues: {
      name: "",
      email: "",
      country: "United States",
      terms: ""
    },

    validationSchema: Yup.object({
      name: Yup.string().max(20, 'Name must be 20 characters or less').required('Name is required'),
      email: Yup.string().email("Invalid email address").required('Email is required'),
      terms: Yup.array().required("terms of service must be checked")
    }),

    onSubmit: (values) => {
      console.log(values)
      router.push({pathname: '/sucess', query: values})
    }
  })


  return (
    <m.div initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}} className="absolute">
      <Head>
        <title>React Form</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen flex items-center justify-center">
        <form className="bg-white flex rounded-lg w-1/2" onSubmit={formik.handleSubmit}>
          <div className="flex-1 tet-gray-700 p-20">
            <h1 className="text-3xl pb-2">Let&apos;s get started.</h1>
            <p className="text-lg text-gray-500">
              Join our E-learning platform today and unlock over 500+ courses
              and digital assets ready to download
            </p>
            <div className="mt-6">
              <div className="pb-4">
                <label className= {`block text-sm pb-2 ${formik.touched.name && formik.errors.name ? text-red-400 : ""}`} htmlFor="name">
                  {formik.touched.name && formik.errors.name ? formik.errors.name : "Name"}
                </label>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 focus:ring-teal-500"
                  type="text"
                  name="name"
                  value={formik.values.name}
                  onChange={formik.handleChange}
                  placeholder="Enter your name."
                  onBlur={formik.handleBlur}
                />
              </div>
              <div className="pb-4">
                <label className= {`block text-sm pb-2 ${formik.touched.email && formik.errors.email ? text-red-400 : ""}`} htmlFor="email">
                {formik.touched.email && formik.errors.email ? formik.errors.email : "Email"}
                </label>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 focus:ring-teal-500"
                  type="email"
                  name="email"
                  value={formik.values.email}
                  onChange={formik.handleChange}
                  placeholder="Enter your email."
                  onBlur={formik.handleBlur}
                />
              </div>
              <div className="pb-4">
                <label className="block text-sm pb-2" htmlFor="country">
                  country
                </label>
                <select
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 focus:ring-teal-500"
                  
                  name="country"
                  value={formik.values.country}
                  onChange={formik.handleChange}
                  placeholder="Enter your email."
                >
                  <option>United States</option>
                  <option>Canada</option>
                  <option>India</option>
                  <option>London</option>
                </select>
              </div>
              <div className="pb-4">
                <label className= {`block text-sm pb-2 ${formik.touched.terms && formik.errors.terms ? text-red-400 : ""}`} htmlFor="terms">
                  {formik.touched.terms && formik.errors.terms ? formik.errors.terms : "Terms of Service"}
                </label>
                <div className="flex items-center gap-2">
                  <input type="checkbox" name="terms" value="checked" 
                  onChange={formik.handleChange}/>
                  <p className="text-sm text-gray-500">I agree to the terms and services that my data will be taken and sold.</p>
                </div>
              </div>
              <button type="submit" className="bg-teal-500 text-sm text-white py-3 mt-6 rounded-lg w-full">Start learning today</button>
            </div>
          </div>
        </form>
      </main>
    </m.div>
  );
}
